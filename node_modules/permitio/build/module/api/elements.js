import { AuthenticationApi } from '../openapi';
import { BASE_PATH } from '../openapi/base';
import { BasePermitApi } from './base';
/**
 * Represents the possible error messages returned by the Elements API.
 */
export var ElementsApiErrors;
(function (ElementsApiErrors) {
    ElementsApiErrors["USER_NOT_FOUND"] = "User not found";
    ElementsApiErrors["TENANT_NOT_FOUND"] = "Tenant not found";
    ElementsApiErrors["INVALID_PERMISSION_LEVEL"] = "Invalid user permission level";
    ElementsApiErrors["FORBIDDEN_ACCESS"] = "Forbidden access";
})(ElementsApiErrors || (ElementsApiErrors = {}));
/**
 * API client for interacting with the Permit Elements API.
 */
export class ElementsClient extends BasePermitApi {
    authApi;
    /**
     * Creates an instance of the ElementsClient.
     * @param config - The configuration object for the Permit SDK.
     * @param logger - The logger instance for logging.
     */
    constructor(config, logger) {
        super(config, logger);
        this.authApi = new AuthenticationApi(this.openapiClientConfig, BASE_PATH, this.config.axiosInstance);
    }
    /**
     * Logs in as a user in the context of a specific tenant.
     * @param loginData - The login data containing the user key and tenant key.
     * @returns The embedded login authentication session data.
     * @throws {@link PermitApiError} If the API returns an error HTTP status code.
     * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.
     */
    async loginAs({ userId, tenantId, }) {
        try {
            const response = await this.authApi.elementsLoginAs({
                userLoginRequestInput: {
                    user_id: userId,
                    tenant_id: tenantId,
                },
            });
            return {
                ...response.data,
                content: { url: response.data.redirect_url },
            };
        }
        catch (err) {
            this.handleApiError(err);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxlbWVudHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvYXBpL2VsZW1lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE9BQU8sRUFBRSxpQkFBaUIsRUFBOEIsTUFBTSxZQUFZLENBQUM7QUFDM0UsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRTVDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxRQUFRLENBQUM7QUF1QnZDOztHQUVHO0FBQ0gsTUFBTSxDQUFOLElBQVksaUJBS1g7QUFMRCxXQUFZLGlCQUFpQjtJQUMzQixzREFBaUMsQ0FBQTtJQUNqQywwREFBcUMsQ0FBQTtJQUNyQywrRUFBMEQsQ0FBQTtJQUMxRCwwREFBcUMsQ0FBQTtBQUN2QyxDQUFDLEVBTFcsaUJBQWlCLEtBQWpCLGlCQUFpQixRQUs1QjtBQWlCRDs7R0FFRztBQUNILE1BQU0sT0FBTyxjQUFlLFNBQVEsYUFBYTtJQUN2QyxPQUFPLENBQW9CO0lBRW5DOzs7O09BSUc7SUFDSCxZQUFZLE1BQXFCLEVBQUUsTUFBYztRQUMvQyxLQUFLLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxpQkFBaUIsQ0FDbEMsSUFBSSxDQUFDLG1CQUFtQixFQUN4QixTQUFTLEVBQ1QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQzFCLENBQUM7SUFDSixDQUFDO0lBRUQ7Ozs7OztPQU1HO0lBQ0ksS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUNuQixNQUFNLEVBQ04sUUFBUSxHQUNNO1FBQ2QsSUFBSTtZQUNGLE1BQU0sUUFBUSxHQUFHLE1BQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUM7Z0JBQ2xELHFCQUFxQixFQUFFO29CQUNyQixPQUFPLEVBQUUsTUFBTTtvQkFDZixTQUFTLEVBQUUsUUFBUTtpQkFDcEI7YUFDRixDQUFDLENBQUM7WUFDSCxPQUFPO2dCQUNMLEdBQUcsUUFBUSxDQUFDLElBQUk7Z0JBQ2hCLE9BQU8sRUFBRSxFQUFFLEdBQUcsRUFBRSxRQUFRLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRTthQUM3QyxDQUFDO1NBQ0g7UUFBQyxPQUFPLEdBQUcsRUFBRTtZQUNaLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDMUI7SUFDSCxDQUFDO0NBQ0YifQ==