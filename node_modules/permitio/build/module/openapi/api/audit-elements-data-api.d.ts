/**
 * Permit.io API
 *  Authorization as a service
 *
 * The version of the OpenAPI document: 2.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { PaginatedResultAuditLog } from '../types';
/**
 * AuditElementsDataApi - axios parameter creator
 * @export
 */
export declare const AuditElementsDataApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Lists audit logs for for specific elements config (tenant scope)
     * @summary List audit logs
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \&quot;slug\&quot;).
     * @param {string} [search] Text search for the email field
     * @param {number} [page] Page number of the results to fetch, starting at 1.
     * @param {number} [perPage] The number of results per page (max 100).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    elementsListAuditLogs: (projId: string, envId: string, elementsConfigId: string, search?: string, page?: number, perPage?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AuditElementsDataApi - functional programming interface
 * @export
 */
export declare const AuditElementsDataApiFp: (configuration?: Configuration) => {
    /**
     * Lists audit logs for for specific elements config (tenant scope)
     * @summary List audit logs
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \&quot;slug\&quot;).
     * @param {string} [search] Text search for the email field
     * @param {number} [page] Page number of the results to fetch, starting at 1.
     * @param {number} [perPage] The number of results per page (max 100).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    elementsListAuditLogs(projId: string, envId: string, elementsConfigId: string, search?: string, page?: number, perPage?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedResultAuditLog>>;
};
/**
 * AuditElementsDataApi - factory interface
 * @export
 */
export declare const AuditElementsDataApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Lists audit logs for for specific elements config (tenant scope)
     * @summary List audit logs
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \&quot;slug\&quot;).
     * @param {string} [search] Text search for the email field
     * @param {number} [page] Page number of the results to fetch, starting at 1.
     * @param {number} [perPage] The number of results per page (max 100).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    elementsListAuditLogs(projId: string, envId: string, elementsConfigId: string, search?: string, page?: number, perPage?: number, options?: any): AxiosPromise<PaginatedResultAuditLog>;
};
/**
 * Request parameters for elementsListAuditLogs operation in AuditElementsDataApi.
 * @export
 * @interface AuditElementsDataApiElementsListAuditLogsRequest
 */
export interface AuditElementsDataApiElementsListAuditLogsRequest {
    /**
     * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @type {string}
     * @memberof AuditElementsDataApiElementsListAuditLogs
     */
    readonly projId: string;
    /**
     * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @type {string}
     * @memberof AuditElementsDataApiElementsListAuditLogs
     */
    readonly envId: string;
    /**
     * Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \&quot;slug\&quot;).
     * @type {string}
     * @memberof AuditElementsDataApiElementsListAuditLogs
     */
    readonly elementsConfigId: string;
    /**
     * Text search for the email field
     * @type {string}
     * @memberof AuditElementsDataApiElementsListAuditLogs
     */
    readonly search?: string;
    /**
     * Page number of the results to fetch, starting at 1.
     * @type {number}
     * @memberof AuditElementsDataApiElementsListAuditLogs
     */
    readonly page?: number;
    /**
     * The number of results per page (max 100).
     * @type {number}
     * @memberof AuditElementsDataApiElementsListAuditLogs
     */
    readonly perPage?: number;
}
/**
 * AuditElementsDataApi - object-oriented interface
 * @export
 * @class AuditElementsDataApi
 * @extends {BaseAPI}
 */
export declare class AuditElementsDataApi extends BaseAPI {
    /**
     * Lists audit logs for for specific elements config (tenant scope)
     * @summary List audit logs
     * @param {AuditElementsDataApiElementsListAuditLogsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuditElementsDataApi
     */
    elementsListAuditLogs(requestParameters: AuditElementsDataApiElementsListAuditLogsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedResultAuditLog, any>>;
}
