/**
 * Permit.io API
 *  Authorization as a service
 *
 * The version of the OpenAPI document: 2.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { TenantCreateBulkOperation } from '../types';
import { TenantDeleteBulkOperation } from '../types';
import { UserCreateBulkOperation } from '../types';
import { UserDeleteBulkOperation } from '../types';
import { UserReplaceBulkOperation } from '../types';
/**
 * BulkOperationsApi - axios parameter creator
 * @export
 */
export declare const BulkOperationsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Bulk Create Tenants
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {TenantCreateBulkOperation} tenantCreateBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkCreateTenants: (projId: string, envId: string, tenantCreateBulkOperation: TenantCreateBulkOperation, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Bulk Create Users
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {UserCreateBulkOperation} userCreateBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkCreateUsers: (projId: string, envId: string, userCreateBulkOperation: UserCreateBulkOperation, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Bulk Delete Tenants
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {TenantDeleteBulkOperation} tenantDeleteBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkDeleteTenants: (projId: string, envId: string, tenantDeleteBulkOperation: TenantDeleteBulkOperation, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Bulk Delete Users
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {UserDeleteBulkOperation} userDeleteBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkDeleteUsers: (projId: string, envId: string, userDeleteBulkOperation: UserDeleteBulkOperation, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Bulk Replace Users
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {UserReplaceBulkOperation} userReplaceBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkReplaceUsers: (projId: string, envId: string, userReplaceBulkOperation: UserReplaceBulkOperation, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BulkOperationsApi - functional programming interface
 * @export
 */
export declare const BulkOperationsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Bulk Create Tenants
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {TenantCreateBulkOperation} tenantCreateBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkCreateTenants(projId: string, envId: string, tenantCreateBulkOperation: TenantCreateBulkOperation, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Bulk Create Users
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {UserCreateBulkOperation} userCreateBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkCreateUsers(projId: string, envId: string, userCreateBulkOperation: UserCreateBulkOperation, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Bulk Delete Tenants
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {TenantDeleteBulkOperation} tenantDeleteBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkDeleteTenants(projId: string, envId: string, tenantDeleteBulkOperation: TenantDeleteBulkOperation, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Bulk Delete Users
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {UserDeleteBulkOperation} userDeleteBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkDeleteUsers(projId: string, envId: string, userDeleteBulkOperation: UserDeleteBulkOperation, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Bulk Replace Users
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {UserReplaceBulkOperation} userReplaceBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkReplaceUsers(projId: string, envId: string, userReplaceBulkOperation: UserReplaceBulkOperation, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * BulkOperationsApi - factory interface
 * @export
 */
export declare const BulkOperationsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Bulk Create Tenants
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {TenantCreateBulkOperation} tenantCreateBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkCreateTenants(projId: string, envId: string, tenantCreateBulkOperation: TenantCreateBulkOperation, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary Bulk Create Users
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {UserCreateBulkOperation} userCreateBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkCreateUsers(projId: string, envId: string, userCreateBulkOperation: UserCreateBulkOperation, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary Bulk Delete Tenants
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {TenantDeleteBulkOperation} tenantDeleteBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkDeleteTenants(projId: string, envId: string, tenantDeleteBulkOperation: TenantDeleteBulkOperation, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary Bulk Delete Users
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {UserDeleteBulkOperation} userDeleteBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkDeleteUsers(projId: string, envId: string, userDeleteBulkOperation: UserDeleteBulkOperation, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary Bulk Replace Users
     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {UserReplaceBulkOperation} userReplaceBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkReplaceUsers(projId: string, envId: string, userReplaceBulkOperation: UserReplaceBulkOperation, options?: any): AxiosPromise<object>;
};
/**
 * Request parameters for bulkCreateTenants operation in BulkOperationsApi.
 * @export
 * @interface BulkOperationsApiBulkCreateTenantsRequest
 */
export interface BulkOperationsApiBulkCreateTenantsRequest {
    /**
     * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @type {string}
     * @memberof BulkOperationsApiBulkCreateTenants
     */
    readonly projId: string;
    /**
     * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @type {string}
     * @memberof BulkOperationsApiBulkCreateTenants
     */
    readonly envId: string;
    /**
     *
     * @type {TenantCreateBulkOperation}
     * @memberof BulkOperationsApiBulkCreateTenants
     */
    readonly tenantCreateBulkOperation: TenantCreateBulkOperation;
}
/**
 * Request parameters for bulkCreateUsers operation in BulkOperationsApi.
 * @export
 * @interface BulkOperationsApiBulkCreateUsersRequest
 */
export interface BulkOperationsApiBulkCreateUsersRequest {
    /**
     * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @type {string}
     * @memberof BulkOperationsApiBulkCreateUsers
     */
    readonly projId: string;
    /**
     * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @type {string}
     * @memberof BulkOperationsApiBulkCreateUsers
     */
    readonly envId: string;
    /**
     *
     * @type {UserCreateBulkOperation}
     * @memberof BulkOperationsApiBulkCreateUsers
     */
    readonly userCreateBulkOperation: UserCreateBulkOperation;
}
/**
 * Request parameters for bulkDeleteTenants operation in BulkOperationsApi.
 * @export
 * @interface BulkOperationsApiBulkDeleteTenantsRequest
 */
export interface BulkOperationsApiBulkDeleteTenantsRequest {
    /**
     * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @type {string}
     * @memberof BulkOperationsApiBulkDeleteTenants
     */
    readonly projId: string;
    /**
     * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @type {string}
     * @memberof BulkOperationsApiBulkDeleteTenants
     */
    readonly envId: string;
    /**
     *
     * @type {TenantDeleteBulkOperation}
     * @memberof BulkOperationsApiBulkDeleteTenants
     */
    readonly tenantDeleteBulkOperation: TenantDeleteBulkOperation;
}
/**
 * Request parameters for bulkDeleteUsers operation in BulkOperationsApi.
 * @export
 * @interface BulkOperationsApiBulkDeleteUsersRequest
 */
export interface BulkOperationsApiBulkDeleteUsersRequest {
    /**
     * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @type {string}
     * @memberof BulkOperationsApiBulkDeleteUsers
     */
    readonly projId: string;
    /**
     * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @type {string}
     * @memberof BulkOperationsApiBulkDeleteUsers
     */
    readonly envId: string;
    /**
     *
     * @type {UserDeleteBulkOperation}
     * @memberof BulkOperationsApiBulkDeleteUsers
     */
    readonly userDeleteBulkOperation: UserDeleteBulkOperation;
}
/**
 * Request parameters for bulkReplaceUsers operation in BulkOperationsApi.
 * @export
 * @interface BulkOperationsApiBulkReplaceUsersRequest
 */
export interface BulkOperationsApiBulkReplaceUsersRequest {
    /**
     * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @type {string}
     * @memberof BulkOperationsApiBulkReplaceUsers
     */
    readonly projId: string;
    /**
     * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @type {string}
     * @memberof BulkOperationsApiBulkReplaceUsers
     */
    readonly envId: string;
    /**
     *
     * @type {UserReplaceBulkOperation}
     * @memberof BulkOperationsApiBulkReplaceUsers
     */
    readonly userReplaceBulkOperation: UserReplaceBulkOperation;
}
/**
 * BulkOperationsApi - object-oriented interface
 * @export
 * @class BulkOperationsApi
 * @extends {BaseAPI}
 */
export declare class BulkOperationsApi extends BaseAPI {
    /**
     *
     * @summary Bulk Create Tenants
     * @param {BulkOperationsApiBulkCreateTenantsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BulkOperationsApi
     */
    bulkCreateTenants(requestParameters: BulkOperationsApiBulkCreateTenantsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object>>;
    /**
     *
     * @summary Bulk Create Users
     * @param {BulkOperationsApiBulkCreateUsersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BulkOperationsApi
     */
    bulkCreateUsers(requestParameters: BulkOperationsApiBulkCreateUsersRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object>>;
    /**
     *
     * @summary Bulk Delete Tenants
     * @param {BulkOperationsApiBulkDeleteTenantsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BulkOperationsApi
     */
    bulkDeleteTenants(requestParameters: BulkOperationsApiBulkDeleteTenantsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object>>;
    /**
     *
     * @summary Bulk Delete Users
     * @param {BulkOperationsApiBulkDeleteUsersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BulkOperationsApi
     */
    bulkDeleteUsers(requestParameters: BulkOperationsApiBulkDeleteUsersRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object>>;
    /**
     *
     * @summary Bulk Replace Users
     * @param {BulkOperationsApiBulkReplaceUsersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BulkOperationsApi
     */
    bulkReplaceUsers(requestParameters: BulkOperationsApiBulkReplaceUsersRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object>>;
}
