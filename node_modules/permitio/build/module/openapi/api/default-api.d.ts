/**
 * Permit.io API
 *  Authorization as a service
 *
 * The version of the OpenAPI document: 2.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { OrganizationRead } from '../types';
/**
 * DefaultApi - axios parameter creator
 * @export
 */
export declare const DefaultApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Dummy
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    dummy: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Dummy Db
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    dummyDb: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get Organization
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrganizationV2StressDbOrganizationGet: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get Organization With Authn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrganizationWithAuthn: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get Organization With Authz
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrganizationWithAuthz: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DefaultApi - functional programming interface
 * @export
 */
export declare const DefaultApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Dummy
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    dummy(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     *
     * @summary Dummy Db
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    dummyDb(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     *
     * @summary Get Organization
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrganizationV2StressDbOrganizationGet(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationRead>>;
    /**
     *
     * @summary Get Organization With Authn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrganizationWithAuthn(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationRead>>;
    /**
     *
     * @summary Get Organization With Authz
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrganizationWithAuthz(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationRead>>;
};
/**
 * DefaultApi - factory interface
 * @export
 */
export declare const DefaultApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Dummy
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    dummy(options?: any): AxiosPromise<any>;
    /**
     *
     * @summary Dummy Db
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    dummyDb(options?: any): AxiosPromise<any>;
    /**
     *
     * @summary Get Organization
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrganizationV2StressDbOrganizationGet(options?: any): AxiosPromise<OrganizationRead>;
    /**
     *
     * @summary Get Organization With Authn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrganizationWithAuthn(options?: any): AxiosPromise<OrganizationRead>;
    /**
     *
     * @summary Get Organization With Authz
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrganizationWithAuthz(options?: any): AxiosPromise<OrganizationRead>;
};
/**
 * DefaultApi - object-oriented interface
 * @export
 * @class DefaultApi
 * @extends {BaseAPI}
 */
export declare class DefaultApi extends BaseAPI {
    /**
     *
     * @summary Dummy
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    dummy(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     *
     * @summary Dummy Db
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    dummyDb(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     *
     * @summary Get Organization
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    getOrganizationV2StressDbOrganizationGet(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationRead, any>>;
    /**
     *
     * @summary Get Organization With Authn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    getOrganizationWithAuthn(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationRead, any>>;
    /**
     *
     * @summary Get Organization With Authz
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    getOrganizationWithAuthz(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationRead, any>>;
}
