import { MappedEndpoint } from './types';
export declare function groupRestHoleEndpoints(endpoints: MappedEndpoint[]): Record<string, MappedEndpoint[]>;
/**          const group: MappedEndpoint[] = _.get(groups, shared, []);
          group.push(a);
          groups[shared] = group;
          // Place only in one group (the longest - most specific)
          break; */
/**
 *
 * @param path route path
 * @param groups groups of endpoints
 * @returns the group the path belongs to, or undefined if not found
 */
export declare function findGroupForPath(path: string, groups: Record<string, MappedEndpoint[]>): {
    endpoints: MappedEndpoint[];
    name: string;
} | undefined;
/**
 *
 * Heuristic to rename endpoint methods for REST-HOLE; based on last route part
 * update groups in place
 * @returns groups (updated)
 */
export declare function nameEndpointsInRestHoleGroups(groups: Record<string, MappedEndpoint[]>): Record<string, MappedEndpoint[]>;
