import { Permit } from '../index';
import { LoggerFactory } from '../logger';
export const printBreak = () => {
    console.log('\n\n ----------- \n\n');
};
export function handleApiError(error, message, t) {
    const err = `${message}: status=${error.response?.status}, url=${error.request.url}, method=${error.request.method}, details=${error.response?.data}`;
    t.context.logger.error(err);
    t.fail(err);
}
export const provideTestExecutionContext = (t) => {
    // config
    const defaultPDPAddress = process.env.CLOUD_PDP === 'true' ? 'https://cloudpdp.api.permit.io' : 'http://localhost:7766';
    const defaultApiAddress = process.env.API_TIER === 'prod' ? 'https://api.permit.io' : 'http://localhost:8000';
    const token = process.env.PDP_API_KEY || '';
    const pdpAddress = process.env.PDP_URL || defaultPDPAddress;
    const apiUrl = process.env.PDP_CONTROL_PLANE || defaultApiAddress;
    if (!token) {
        t.fail('PDP_API_KEY is not configured, test cannot run!');
    }
    t.context.permit = new Permit({
        token,
        pdp: pdpAddress,
        apiUrl,
        log: {
            level: 'debug',
        },
    });
    t.context.logger = LoggerFactory.createLogger(t.context.permit.config);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZml4dHVyZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdGVzdHMvZml4dHVyZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFpQixNQUFNLEVBQWtCLE1BQU0sVUFBVSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFJMUMsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLEdBQUcsRUFBRTtJQUM3QixPQUFPLENBQUMsR0FBRyxDQUFDLHVCQUF1QixDQUFDLENBQUM7QUFDdkMsQ0FBQyxDQUFDO0FBRUYsTUFBTSxVQUFVLGNBQWMsQ0FDNUIsS0FBMEIsRUFDMUIsT0FBZSxFQUNmLENBQWdDO0lBRWhDLE1BQU0sR0FBRyxHQUFHLEdBQUcsT0FBTyxZQUFZLEtBQUssQ0FBQyxRQUFRLEVBQUUsTUFBTSxTQUFTLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxZQUFZLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxhQUFhLEtBQUssQ0FBQyxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDdEosQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzVCLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDZCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQUcsQ0FBQyxDQUFnQyxFQUFFLEVBQUU7SUFDOUUsU0FBUztJQUNULE1BQU0saUJBQWlCLEdBQ3JCLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxLQUFLLE1BQU0sQ0FBQyxDQUFDLENBQUMsZ0NBQWdDLENBQUMsQ0FBQyxDQUFDLHVCQUF1QixDQUFDO0lBQ2hHLE1BQU0saUJBQWlCLEdBQ3JCLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxLQUFLLE1BQU0sQ0FBQyxDQUFDLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxDQUFDLHVCQUF1QixDQUFDO0lBRXRGLE1BQU0sS0FBSyxHQUFXLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxJQUFJLEVBQUUsQ0FBQztJQUNwRCxNQUFNLFVBQVUsR0FBVyxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sSUFBSSxpQkFBaUIsQ0FBQztJQUNwRSxNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGlCQUFpQixJQUFJLGlCQUFpQixDQUFDO0lBRWxFLElBQUksQ0FBQyxLQUFLLEVBQUU7UUFDVixDQUFDLENBQUMsSUFBSSxDQUFDLGlEQUFpRCxDQUFDLENBQUM7S0FDM0Q7SUFFRCxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQztRQUM1QixLQUFLO1FBQ0wsR0FBRyxFQUFFLFVBQVU7UUFDZixNQUFNO1FBQ04sR0FBRyxFQUFFO1lBQ0gsS0FBSyxFQUFFLE9BQU87U0FDZjtLQUNGLENBQUMsQ0FBQztJQUVILENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLGFBQWEsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDekUsQ0FBQyxDQUFDIn0=