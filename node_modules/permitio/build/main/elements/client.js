"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ElementsClient = exports.ElementsApiErrors = void 0;
const axios_1 = __importDefault(require("axios"));
const openapi_1 = require("../openapi");
var ElementsApiErrors;
(function (ElementsApiErrors) {
    ElementsApiErrors["USER_NOT_FOUND"] = "User not found";
    ElementsApiErrors["TENANT_NOT_FOUND"] = "Tenant not found";
    ElementsApiErrors["INVALID_PERMISSION_LEVEL"] = "Invalid user permission level";
    ElementsApiErrors["FORBIDDEN_ACCESS"] = "Forbidden access";
})(ElementsApiErrors = exports.ElementsApiErrors || (exports.ElementsApiErrors = {}));
class ElementsClient {
    constructor(config, logger) {
        this.config = config;
        this.logger = logger;
        const axiosClientConfig = new openapi_1.Configuration({
            basePath: `${this.config.apiUrl}`,
            accessToken: this.config.token,
        });
        this.authApi = new openapi_1.AuthenticationApi(axiosClientConfig);
    }
    async loginAs({ userId, tenantId, }) {
        var _a, _b;
        try {
            const response = await this.authApi.elementsLoginAs({
                userLoginRequestInput: {
                    user_id: userId,
                    tenant_id: tenantId,
                },
            });
            this.logger.debug(`[${response.status}] permit.api.loginAs(${userId})`);
            const res = response.data;
            res['content'] = { url: response.data.redirect_url };
            return res;
        }
        catch (err) {
            if (axios_1.default.isAxiosError(err)) {
                this.logger.error(`[${(_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.status}] permit.api.loginAs(${userId}), err: ${JSON.stringify((_b = err === null || err === void 0 ? void 0 : err.response) === null || _b === void 0 ? void 0 : _b.data)}`);
            }
            throw err;
        }
    }
    get elements() {
        return {
            loginAs: this.loginAs.bind(this),
        };
    }
    getMethods() {
        return {
            elements: this.elements,
        };
    }
}
exports.ElementsClient = ElementsClient;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2VsZW1lbnRzL2NsaWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxrREFBMEI7QUFJMUIsd0NBQTBGO0FBVTFGLElBQVksaUJBS1g7QUFMRCxXQUFZLGlCQUFpQjtJQUMzQixzREFBaUMsQ0FBQTtJQUNqQywwREFBcUMsQ0FBQTtJQUNyQywrRUFBMEQsQ0FBQTtJQUMxRCwwREFBcUMsQ0FBQTtBQUN2QyxDQUFDLEVBTFcsaUJBQWlCLEdBQWpCLHlCQUFpQixLQUFqQix5QkFBaUIsUUFLNUI7QUFXRCxNQUFhLGNBQWM7SUFHekIsWUFBb0IsTUFBcUIsRUFBVSxNQUFjO1FBQTdDLFdBQU0sR0FBTixNQUFNLENBQWU7UUFBVSxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQy9ELE1BQU0saUJBQWlCLEdBQUcsSUFBSSx1QkFBYSxDQUFDO1lBQzFDLFFBQVEsRUFBRSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFO1lBQ2pDLFdBQVcsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUs7U0FDL0IsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLDJCQUFpQixDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFDMUQsQ0FBQztJQUVNLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFDbkIsTUFBTSxFQUNOLFFBQVEsR0FDTTs7UUFDZCxJQUFJO1lBQ0YsTUFBTSxRQUFRLEdBQUcsTUFBTSxJQUFJLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQztnQkFDbEQscUJBQXFCLEVBQUU7b0JBQ3JCLE9BQU8sRUFBRSxNQUFNO29CQUNmLFNBQVMsRUFBRSxRQUFRO2lCQUNwQjthQUNGLENBQUMsQ0FBQztZQUNILElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksUUFBUSxDQUFDLE1BQU0sd0JBQXdCLE1BQU0sR0FBRyxDQUFDLENBQUM7WUFDeEUsTUFBTSxHQUFHLEdBQTBDLFFBQVEsQ0FBQyxJQUFJLENBQUM7WUFDakUsR0FBRyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLFFBQVEsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7WUFDckQsT0FBTyxHQUFHLENBQUM7U0FDWjtRQUFDLE9BQU8sR0FBRyxFQUFFO1lBQ1osSUFBSSxlQUFLLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxFQUFFO2dCQUMzQixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FDZixJQUFJLE1BQUEsR0FBRyxhQUFILEdBQUcsdUJBQUgsR0FBRyxDQUFFLFFBQVEsMENBQUUsTUFBTSx3QkFBd0IsTUFBTSxXQUFXLElBQUksQ0FBQyxTQUFTLENBQzlFLE1BQUEsR0FBRyxhQUFILEdBQUcsdUJBQUgsR0FBRyxDQUFFLFFBQVEsMENBQUUsSUFBSSxDQUNwQixFQUFFLENBQ0osQ0FBQzthQUNIO1lBQ0QsTUFBTSxHQUFHLENBQUM7U0FDWDtJQUNILENBQUM7SUFFRCxJQUFXLFFBQVE7UUFDakIsT0FBTztZQUNMLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7U0FDakMsQ0FBQztJQUNKLENBQUM7SUFFTSxVQUFVO1FBQ2YsT0FBTztZQUNMLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtTQUN4QixDQUFDO0lBQ0osQ0FBQztDQUNGO0FBakRELHdDQWlEQyJ9