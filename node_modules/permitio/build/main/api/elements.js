"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ElementsClient = exports.ElementsApiErrors = void 0;
const openapi_1 = require("../openapi");
const base_1 = require("../openapi/base");
const base_2 = require("./base");
/**
 * Represents the possible error messages returned by the Elements API.
 */
var ElementsApiErrors;
(function (ElementsApiErrors) {
    ElementsApiErrors["USER_NOT_FOUND"] = "User not found";
    ElementsApiErrors["TENANT_NOT_FOUND"] = "Tenant not found";
    ElementsApiErrors["INVALID_PERMISSION_LEVEL"] = "Invalid user permission level";
    ElementsApiErrors["FORBIDDEN_ACCESS"] = "Forbidden access";
})(ElementsApiErrors = exports.ElementsApiErrors || (exports.ElementsApiErrors = {}));
/**
 * API client for interacting with the Permit Elements API.
 */
class ElementsClient extends base_2.BasePermitApi {
    /**
     * Creates an instance of the ElementsClient.
     * @param config - The configuration object for the Permit SDK.
     * @param logger - The logger instance for logging.
     */
    constructor(config, logger) {
        super(config, logger);
        this.authApi = new openapi_1.AuthenticationApi(this.openapiClientConfig, base_1.BASE_PATH, this.config.axiosInstance);
    }
    /**
     * Logs in as a user in the context of a specific tenant.
     * @param loginData - The login data containing the user key and tenant key.
     * @returns The embedded login authentication session data.
     * @throws {@link PermitApiError} If the API returns an error HTTP status code.
     * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.
     */
    async loginAs({ userId, tenantId, }) {
        try {
            const response = await this.authApi.elementsLoginAs({
                userLoginRequestInput: {
                    user_id: userId,
                    tenant_id: tenantId,
                },
            });
            return Object.assign(Object.assign({}, response.data), { content: { url: response.data.redirect_url } });
        }
        catch (err) {
            this.handleApiError(err);
        }
    }
}
exports.ElementsClient = ElementsClient;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxlbWVudHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvYXBpL2VsZW1lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUdBLHdDQUEyRTtBQUMzRSwwQ0FBNEM7QUFFNUMsaUNBQXVDO0FBdUJ2Qzs7R0FFRztBQUNILElBQVksaUJBS1g7QUFMRCxXQUFZLGlCQUFpQjtJQUMzQixzREFBaUMsQ0FBQTtJQUNqQywwREFBcUMsQ0FBQTtJQUNyQywrRUFBMEQsQ0FBQTtJQUMxRCwwREFBcUMsQ0FBQTtBQUN2QyxDQUFDLEVBTFcsaUJBQWlCLEdBQWpCLHlCQUFpQixLQUFqQix5QkFBaUIsUUFLNUI7QUFpQkQ7O0dBRUc7QUFDSCxNQUFhLGNBQWUsU0FBUSxvQkFBYTtJQUcvQzs7OztPQUlHO0lBQ0gsWUFBWSxNQUFxQixFQUFFLE1BQWM7UUFDL0MsS0FBSyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztRQUN0QixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksMkJBQWlCLENBQ2xDLElBQUksQ0FBQyxtQkFBbUIsRUFDeEIsZ0JBQVMsRUFDVCxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FDMUIsQ0FBQztJQUNKLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDSSxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQ25CLE1BQU0sRUFDTixRQUFRLEdBQ007UUFDZCxJQUFJO1lBQ0YsTUFBTSxRQUFRLEdBQUcsTUFBTSxJQUFJLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQztnQkFDbEQscUJBQXFCLEVBQUU7b0JBQ3JCLE9BQU8sRUFBRSxNQUFNO29CQUNmLFNBQVMsRUFBRSxRQUFRO2lCQUNwQjthQUNGLENBQUMsQ0FBQztZQUNILHVDQUNLLFFBQVEsQ0FBQyxJQUFJLEtBQ2hCLE9BQU8sRUFBRSxFQUFFLEdBQUcsRUFBRSxRQUFRLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUM1QztTQUNIO1FBQUMsT0FBTyxHQUFHLEVBQUU7WUFDWixJQUFJLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQzFCO0lBQ0gsQ0FBQztDQUNGO0FBM0NELHdDQTJDQyJ9