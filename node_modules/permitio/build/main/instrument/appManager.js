"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppManager = void 0;
const lodash_1 = __importDefault(require("lodash"));
const logger_1 = require("../logger");
const appMapper_1 = require("./appMapper/appMapper");
class AppManager {
    constructor(config, resourceReporter, logger) {
        this.config = config;
        this.resourceReporter = resourceReporter;
        this.logger = logger;
        this.resources = {};
    }
    report(name, resources, endpoints) {
        const SEPARATOR_LINE = '*************************************************';
        console.log(`<Permit.io Documenting App - ${name}>`);
        console.log(SEPARATOR_LINE);
        logger_1.prettyConsoleLog('endpoints', endpoints);
        console.log(SEPARATOR_LINE);
        logger_1.prettyConsoleLog('resources', resources);
        console.log(SEPARATOR_LINE);
    }
    manage(name, app) {
        // TODO support mixed HTTP/HTTPS server (via name merging resources mutual to http and https )
        // If we have auto-mapping - map the app given to us and save its resources
        if (this.config.autoMapping.enable) {
            const { resources, endpoints } = appMapper_1.mapApp(app, this.config.autoMapping.ignoredUrlPrefixes, this.logger);
            if (this.config.autoMapping.reviewMode) {
                this.report(name, resources, endpoints);
            }
            else {
                this.resources[name] = resources;
                lodash_1.default.forEach(resources, (resource) => this.resourceReporter.resource(resource));
            }
        }
    }
}
exports.AppManager = AppManager;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwTWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9pbnN0cnVtZW50L2FwcE1hbmFnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsb0RBQXVCO0FBSXZCLHNDQUE2QztBQU83QyxxREFBK0M7QUFHL0MsTUFBYSxVQUFVO0lBR3JCLFlBQ1UsTUFBcUIsRUFDckIsZ0JBQWtDLEVBQ2xDLE1BQWM7UUFGZCxXQUFNLEdBQU4sTUFBTSxDQUFlO1FBQ3JCLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDbEMsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUx4QixjQUFTLEdBQXdCLEVBQUUsQ0FBQztJQU1qQyxDQUFDO0lBRUosTUFBTSxDQUFDLElBQVksRUFBRSxTQUEyQixFQUFFLFNBQTJCO1FBQzNFLE1BQU0sY0FBYyxHQUFHLG1EQUFtRCxDQUFDO1FBQzNFLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0NBQWdDLElBQUksR0FBRyxDQUFDLENBQUM7UUFDckQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUM1Qix5QkFBZ0IsQ0FBQyxXQUFXLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDekMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUM1Qix5QkFBZ0IsQ0FBQyxXQUFXLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDekMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQsTUFBTSxDQUFDLElBQVksRUFBRSxHQUFRO1FBQzNCLDhGQUE4RjtRQUM5RiwyRUFBMkU7UUFDM0UsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxNQUFNLEVBQUU7WUFDbEMsTUFBTSxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsR0FBRyxrQkFBTSxDQUNyQyxHQUFHLEVBQ0gsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsa0JBQWtCLEVBQzFDLElBQUksQ0FBQyxNQUFNLENBQ1osQ0FBQztZQUNGLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsVUFBVSxFQUFFO2dCQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUM7YUFDekM7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxTQUFTLENBQUM7Z0JBQ2pDLGdCQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO2FBQzlFO1NBQ0Y7SUFDSCxDQUFDO0NBQ0Y7QUFwQ0QsZ0NBb0NDIn0=