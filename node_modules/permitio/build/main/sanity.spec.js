"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ava_1 = __importDefault(require("ava"));
const index_1 = require("./index");
(0, ava_1.default)('paths are processed correctly', async () => {
    const permit = new index_1.Permit({
        token: 'PJUKkuwiJkKxbIoC4o4cguWxB_2gX6MyATYKc2OCM',
    });
    // code example:
    // const [user, created] = await permit.api.createUser({
    //   key: 'asaf@permit.io',
    //   attributes: { name: 'asaf', age: '35' },
    // });
    // permit.resource({
    //   name: 'task',
    //   description: 'Todo Task',
    //   type: 'rest',
    //   path: '/api/v1/boards/:listId/tasks',
    //   actions: [
    //     permit.action({
    //       name: 'list',
    //       title: 'List',
    //       description: 'list all tasks',
    //       path: '/api/v1/boards/:listId/tasks',
    //       attributes: {
    //         verb: 'GET',
    //       },
    //     }),
    //     permit.action({
    //       name: 'retrieve',
    //       title: 'Retrieve',
    //       description: 'Retrieve task details',
    //       path: '/api/v1/boards/:listId/tasks/:taskId',
    //       attributes: {
    //         verb: 'GET',
    //       },
    //     }),
    //   ],
    // });
    // await permit.write(
    //   permit.api.createTenant({ key: 'tenant1', name: 'My First Tenant' }),
    //   permit.api.assignRole('mysuperid', 'Admin', 'tenant1'),
    // );
    // TODO: when we support zanzibar
    // await permit.write(
    //   permit.relationships({
    //     tuples: [
    //       { user: 'alice', relation: 'reader', object: 'document:A'},
    //       { user: 'bob', relation: 'reader', object: 'document:B'},
    //       { user: 'charlie', relation: 'reader', object: 'document:C'},
    //     ]
    //   })
    // );
    // const context = permit.getUrlContext("/api/v1/boards/b1/tasks/t1", "GET");
    // if (!context) {
    //   return;
    // }
    // const { resource, action } = context;
    // permit.check({ key: "u1" }, action, resource);
    // permit.save((api: IPermitCloudMutations): Promise<any> => {
    //   return Promise.all([
    //     api.createTenant({key: "teannt1", name: "Ten 1"}),
    //     api.assignRole("uk", "admin", "tk"),
    //   ]);
    // });
    // t.is(resourceRegistry.paths.length, 2);
    // const result = resourceRegistry.getResourceAndActionFromRequestParams("/api/v1/boards/2/tasks/25");
    // t.is(result?.resource.name, 'task');
    // t.is(result?.resource.context['listId'], '2');
    // t.is(result?.resource.context['taskId'], '25');
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FuaXR5LnNwZWMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2FuaXR5LnNwZWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSw4Q0FBdUI7QUFFdkIsbUNBQWlDO0FBRWpDLElBQUEsYUFBSSxFQUFDLCtCQUErQixFQUFFLEtBQUssSUFBSSxFQUFFO0lBRzdDLE1BQU0sTUFBTSxHQUFHLElBQUksY0FBTSxDQUFDO1FBQ3hCLEtBQUssRUFBRSwyQ0FBMkM7S0FDbkQsQ0FBQyxDQUFDO0lBRUgsZ0JBQWdCO0lBQ2hCLHdEQUF3RDtJQUN4RCwyQkFBMkI7SUFDM0IsNkNBQTZDO0lBQzdDLE1BQU07SUFFTixvQkFBb0I7SUFDcEIsa0JBQWtCO0lBQ2xCLDhCQUE4QjtJQUM5QixrQkFBa0I7SUFDbEIsMENBQTBDO0lBQzFDLGVBQWU7SUFDZixzQkFBc0I7SUFDdEIsc0JBQXNCO0lBQ3RCLHVCQUF1QjtJQUN2Qix1Q0FBdUM7SUFDdkMsOENBQThDO0lBQzlDLHNCQUFzQjtJQUN0Qix1QkFBdUI7SUFDdkIsV0FBVztJQUNYLFVBQVU7SUFDVixzQkFBc0I7SUFDdEIsMEJBQTBCO0lBQzFCLDJCQUEyQjtJQUMzQiw4Q0FBOEM7SUFDOUMsc0RBQXNEO0lBQ3RELHNCQUFzQjtJQUN0Qix1QkFBdUI7SUFDdkIsV0FBVztJQUNYLFVBQVU7SUFDVixPQUFPO0lBQ1AsTUFBTTtJQUVOLHNCQUFzQjtJQUN0QiwwRUFBMEU7SUFDMUUsNERBQTREO0lBQzVELEtBQUs7SUFFTCxpQ0FBaUM7SUFDakMsc0JBQXNCO0lBQ3RCLDJCQUEyQjtJQUMzQixnQkFBZ0I7SUFDaEIsb0VBQW9FO0lBQ3BFLGtFQUFrRTtJQUNsRSxzRUFBc0U7SUFDdEUsUUFBUTtJQUNSLE9BQU87SUFDUCxLQUFLO0lBRUwsNkVBQTZFO0lBQzdFLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osSUFBSTtJQUNKLHdDQUF3QztJQUV4QyxpREFBaUQ7SUFFakQsOERBQThEO0lBQzlELHlCQUF5QjtJQUN6Qix5REFBeUQ7SUFDekQsMkNBQTJDO0lBQzNDLFFBQVE7SUFDUixNQUFNO0lBRU4sMENBQTBDO0lBQzFDLHNHQUFzRztJQUN0Ryx1Q0FBdUM7SUFDdkMsaURBQWlEO0lBQ2pELGtEQUFrRDtBQUNwRCxDQUFDLENBQUMsQ0FBQyJ9