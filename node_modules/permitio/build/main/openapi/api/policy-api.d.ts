/**
 * Permit.io API
 *  Authorization as a service
 *
 * The version of the OpenAPI document: 2.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { PermitBackendOpalApiDataDataSourceConfig } from '../types';
/**
 * PolicyApi - axios parameter creator
 * @export
 */
export declare const PolicyApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Get Opal Data Sources
     * @param {string} [token]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOpalDataSources: (token?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get Opal Data Sources
     * @param {string} [token]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOpalDataSourcesOpalDataConfigGet: (token?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PolicyApi - functional programming interface
 * @export
 */
export declare const PolicyApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Get Opal Data Sources
     * @param {string} [token]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOpalDataSources(token?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PermitBackendOpalApiDataDataSourceConfig>>;
    /**
     *
     * @summary Get Opal Data Sources
     * @param {string} [token]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOpalDataSourcesOpalDataConfigGet(token?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PermitBackendOpalApiDataDataSourceConfig>>;
};
/**
 * PolicyApi - factory interface
 * @export
 */
export declare const PolicyApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Get Opal Data Sources
     * @param {string} [token]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOpalDataSources(token?: string, options?: any): AxiosPromise<PermitBackendOpalApiDataDataSourceConfig>;
    /**
     *
     * @summary Get Opal Data Sources
     * @param {string} [token]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOpalDataSourcesOpalDataConfigGet(token?: string, options?: any): AxiosPromise<PermitBackendOpalApiDataDataSourceConfig>;
};
/**
 * Request parameters for getOpalDataSources operation in PolicyApi.
 * @export
 * @interface PolicyApiGetOpalDataSourcesRequest
 */
export interface PolicyApiGetOpalDataSourcesRequest {
    /**
     *
     * @type {string}
     * @memberof PolicyApiGetOpalDataSources
     */
    readonly token?: string;
}
/**
 * Request parameters for getOpalDataSourcesOpalDataConfigGet operation in PolicyApi.
 * @export
 * @interface PolicyApiGetOpalDataSourcesOpalDataConfigGetRequest
 */
export interface PolicyApiGetOpalDataSourcesOpalDataConfigGetRequest {
    /**
     *
     * @type {string}
     * @memberof PolicyApiGetOpalDataSourcesOpalDataConfigGet
     */
    readonly token?: string;
}
/**
 * PolicyApi - object-oriented interface
 * @export
 * @class PolicyApi
 * @extends {BaseAPI}
 */
export declare class PolicyApi extends BaseAPI {
    /**
     *
     * @summary Get Opal Data Sources
     * @param {PolicyApiGetOpalDataSourcesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PolicyApi
     */
    getOpalDataSources(requestParameters?: PolicyApiGetOpalDataSourcesRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PermitBackendOpalApiDataDataSourceConfig, any>>;
    /**
     *
     * @summary Get Opal Data Sources
     * @param {PolicyApiGetOpalDataSourcesOpalDataConfigGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PolicyApi
     */
    getOpalDataSourcesOpalDataConfigGet(requestParameters?: PolicyApiGetOpalDataSourcesOpalDataConfigGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PermitBackendOpalApiDataDataSourceConfig, any>>;
}
