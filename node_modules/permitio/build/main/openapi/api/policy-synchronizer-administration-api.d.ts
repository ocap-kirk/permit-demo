/**
 * Permit.io API
 *  Authorization as a service
 *
 * The version of the OpenAPI document: 2.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { Message } from '../types';
/**
 * PolicySynchronizerAdministrationApi - axios parameter creator
 * @export
 */
export declare const PolicySynchronizerAdministrationApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Push policy synchronizer update to all environments in the vc organization
     * @summary Regenerate environments
     * @param {Message} message
     * @param {number} [chunkSize] Number of environments to regenerate in a chunk
     * @param {number} [chunkCooldown] Cooldown between chunks in seconds
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policySynchronizerAdministration: (message: Message, chunkSize?: number, chunkCooldown?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PolicySynchronizerAdministrationApi - functional programming interface
 * @export
 */
export declare const PolicySynchronizerAdministrationApiFp: (configuration?: Configuration) => {
    /**
     * Push policy synchronizer update to all environments in the vc organization
     * @summary Regenerate environments
     * @param {Message} message
     * @param {number} [chunkSize] Number of environments to regenerate in a chunk
     * @param {number} [chunkCooldown] Cooldown between chunks in seconds
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policySynchronizerAdministration(message: Message, chunkSize?: number, chunkCooldown?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>>;
};
/**
 * PolicySynchronizerAdministrationApi - factory interface
 * @export
 */
export declare const PolicySynchronizerAdministrationApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Push policy synchronizer update to all environments in the vc organization
     * @summary Regenerate environments
     * @param {Message} message
     * @param {number} [chunkSize] Number of environments to regenerate in a chunk
     * @param {number} [chunkCooldown] Cooldown between chunks in seconds
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policySynchronizerAdministration(message: Message, chunkSize?: number, chunkCooldown?: number, options?: any): AxiosPromise<Array<string>>;
};
/**
 * Request parameters for policySynchronizerAdministration operation in PolicySynchronizerAdministrationApi.
 * @export
 * @interface PolicySynchronizerAdministrationApiPolicySynchronizerAdministrationRequest
 */
export interface PolicySynchronizerAdministrationApiPolicySynchronizerAdministrationRequest {
    /**
     *
     * @type {Message}
     * @memberof PolicySynchronizerAdministrationApiPolicySynchronizerAdministration
     */
    readonly message: Message;
    /**
     * Number of environments to regenerate in a chunk
     * @type {number}
     * @memberof PolicySynchronizerAdministrationApiPolicySynchronizerAdministration
     */
    readonly chunkSize?: number;
    /**
     * Cooldown between chunks in seconds
     * @type {number}
     * @memberof PolicySynchronizerAdministrationApiPolicySynchronizerAdministration
     */
    readonly chunkCooldown?: number;
}
/**
 * PolicySynchronizerAdministrationApi - object-oriented interface
 * @export
 * @class PolicySynchronizerAdministrationApi
 * @extends {BaseAPI}
 */
export declare class PolicySynchronizerAdministrationApi extends BaseAPI {
    /**
     * Push policy synchronizer update to all environments in the vc organization
     * @summary Regenerate environments
     * @param {PolicySynchronizerAdministrationApiPolicySynchronizerAdministrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PolicySynchronizerAdministrationApi
     */
    policySynchronizerAdministration(requestParameters: PolicySynchronizerAdministrationApiPolicySynchronizerAdministrationRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string[]>>;
}
